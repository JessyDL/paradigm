name: windows

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: [windows]
        graphics: [vulkan, all]
        arch: [x86, x86_64]
        include:
          - benchmarks: OFF
          - graphics: all
            benchmarks: ON
          - arch: x86
            bitconfig: 32
          - arch: x86_64
            bitconfig: 64
    name: build
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive    
    - uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: setup dependencies
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: initialize
      run: |
            python3 tools/generate_project_info.py
            cmake --preset=windows-${{ matrix.bitconfig }}-release-${{ matrix.graphics }} -DPE_BENCHMARKS=${{ matrix.benchmarks }}
            python3 tools/patch.py --project ./project_files/${{ matrix.arch }}/
    - name: compile
      run: cmake --build --preset=windows-${{ matrix.bitconfig }}-release-${{ matrix.graphics }} -j ${{ steps.cpu-cores.outputs.count }}
    - name: test
      run: |
            cd builds/windows/${{ matrix.arch }}/release/bin
            .\tests.exe --formatter compact --no-source
    - name: finalize    
      if: ${{ matrix.benchmarks == 'ON' }}
      uses: actions/upload-artifact@v3
      with:
        name: windows-${{ matrix.graphics }}-bin
        path: builds/windows/${{ matrix.arch }}/release/bin/benchmarks.exe
        if-no-files-found: error
        retention-days: 1
  benchmark:
    strategy:
      fail-fast: false
      matrix:
        graphics: [ all ]
    name: benchmark
    needs: build
    runs-on: windows-2022
    steps:
    - name: setup
      id: download
      uses: actions/download-artifact@v3
      with:
        name: windows-${{ matrix.graphics }}-bin
    - name: benchmark
      run: .\benchmarks.exe --benchmark_out_format=json --benchmark_out=results.json
    - name: finalize
      uses: actions/upload-artifact@v3
      with:
        name: windows-${{ matrix.graphics }}
        path: results.json
        if-no-files-found: error
