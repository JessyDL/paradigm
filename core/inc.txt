SET(INC 
conversion_utils.hpp
logging.hpp
stdb_truetype.hpp
targetver.hpp
defines.hpp
paradigm.hpp

data/application.hpp
data/buffer.hpp
data/framebuffer.hpp
data/geometry.hpp
data/material.hpp
data/sampler.hpp
data/stream.hpp
data/window.hpp

gfx/stdafx.hpp
gfx/limits.hpp
gfx/types.hpp

gfx/context.hpp
gfx/compute.hpp
gfx/computecall.hpp
gfx/computepass.hpp
gfx/shader.hpp
gfx/buffer.hpp
gfx/geometry.hpp
gfx/texture.hpp
gfx/sampler.hpp
gfx/material.hpp
gfx/swapchain.hpp
gfx/pipeline_cache.hpp
gfx/drawpass.hpp
gfx/framebuffer.hpp

gfx/drawcall.hpp
gfx/drawgroup.hpp
gfx/drawlayer.hpp
gfx/render_graph.hpp
gfx/bundle.hpp
gfx/details/instance.hpp

meta/shader.hpp
meta/texture.hpp

os/surface.hpp

systems/input.hpp

resource/resource.hpp
resource/cache.hpp
resource/handle.hpp
resource/tag.hpp

ecs/systems/fly.hpp
ecs/systems/death.hpp
ecs/systems/lifetime.hpp
ecs/systems/render.hpp
ecs/systems/geometry_instance.hpp
ecs/systems/attractor.hpp
ecs/systems/movement.hpp
ecs/systems/gpu_camera.hpp
ecs/systems/lighting.hpp
ecs/systems/text.hpp
ecs/systems/debug/grid.hpp

ecs/components/camera.hpp
ecs/components/transform.hpp
ecs/components/renderable.hpp
ecs/components/input_tag.hpp
ecs/components/dead_tag.hpp
ecs/components/lifetime.hpp
ecs/components/velocity.hpp
ecs/components/text.hpp

utility/geometry.hpp
)


list(TRANSFORM INC PREPEND inc/)

SET(FWD

resource/resource.hpp
gfx/context.hpp
gfx/shader.hpp
gfx/geometry.hpp
gfx/buffer.hpp
gfx/texture.hpp
gfx/sampler.hpp
gfx/bundle.hpp
gfx/framebuffer.hpp
gfx/material.hpp
gfx/pipeline_cache.hpp
gfx/swapchain.hpp
)


# include files for the Vulkan API
if(${PE_VULKAN})
	set(INC_VULKAN
	ivk.hpp
	buffer.hpp
	compute.hpp
	computepass.hpp
	context.hpp
	conversion.hpp
	drawpass.hpp
	framebuffer.hpp
	geometry.hpp
	material.hpp
	pipeline.hpp
	pipeline_cache.hpp
	sampler.hpp
	shader.hpp
	swapchain.hpp
	texture.hpp
	)

	list(APPEND FWD 

	vk/shader.hpp
	vk/texture.hpp
	vk/buffer.hpp
	)
	list(TRANSFORM INC_VULKAN PREPEND inc/vk/)
endif()

# include files for the GLES API
if(${PE_GLES})
	set(INC_GLES
	igles.hpp
	buffer.hpp
	context.hpp
	geometry.hpp	
	material.hpp
	program.hpp
	program_cache.hpp
	sampler.hpp
	shader.hpp
	swapchain.hpp
	texture.hpp
	framebuffer.hpp
	drawpass.hpp
	conversion.hpp
	types.hpp
	compute.hpp
	computepass.hpp
	)

	list(APPEND FWD 

	gles/shader.hpp
	gles/texture.hpp
	gles/compute.hpp
	)

	list(TRANSFORM INC_GLES PREPEND inc/gles/)
endif()

list(TRANSFORM FWD PREPEND inc/fwd/)