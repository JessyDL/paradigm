SET(SRC 
logging

data/application
data/buffer
data/framebuffer
data/geometry
data/material
data/sampler
data/window

gfx/buffer
gfx/context
gfx/compute
gfx/computecall
gfx/computepass
gfx/geometry
gfx/material
gfx/pipeline_cache
gfx/sampler
gfx/shader
gfx/swapchain
gfx/texture
gfx/framebuffer
gfx/drawpass

gfx/drawcall
gfx/drawgroup
gfx/render_graph
gfx/bundle
gfx/details/instance

meta/shader
meta/texture

os/surface
os/surface_${PE_SURFACE_LOWERCASE}

systems/input
systems/input_${PE_SURFACE_LOWERCASE}

ecs/systems/fly
ecs/systems/render
ecs/systems/gpu_camera
ecs/systems/lighting
ecs/systems/text
ecs/systems/geometry_instance
ecs/systems/debug/grid
)

# plaftorm specific includes
if(PE_PLATFORM STREQUAL "ANDROID")
	list(APPEND SRC
		os/context_android
	)		
else()
	list(APPEND SRC
		os/context
	)		
endif()

list(TRANSFORM SRC PREPEND src/)
list(TRANSFORM SRC APPEND .cpp)

# include files for the Vulkan API
if(${PE_VULKAN})
	set(SRC_VULKAN
	buffer
	compute
	computepass
	context
	drawpass
	framebuffer
	geometry
	material
	pipeline
	pipeline_cache
	sampler
	shader
	swapchain
	texture
	)

	list(TRANSFORM SRC_VULKAN PREPEND src/vk/)
	list(TRANSFORM SRC_VULKAN APPEND .cpp)
endif()

if(${PE_GLES})
	set(SRC_GLES
	buffer
	context
	context_${PE_SURFACE_LOWERCASE}
	geometry
	material
	program
	program_cache
	sampler
	shader
	swapchain
	texture
	framebuffer
	drawpass
	compute
	computepass
	)
	list(TRANSFORM SRC_GLES PREPEND src/gles/)
	list(TRANSFORM SRC_GLES APPEND .cpp)
endif()

set(SRC_CPP2
	hello
	other
)

list(TRANSFORM SRC_CPP2 PREPEND src/)
set(SRC_GEN_CPP2 ${SRC_CPP2})
list(TRANSFORM SRC_GEN_CPP2 APPEND .gen.cpp)
list(TRANSFORM SRC_CPP2 APPEND .cpp2)
set_source_files_properties(${SRC_GEN_CPP2} PROPERTIES GENERATED 1)